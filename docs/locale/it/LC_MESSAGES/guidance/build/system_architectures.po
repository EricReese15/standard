# SOME DESCRIPTIVE TITLE.
# Copyright (C) Open Contracting Partnership
# This file is distributed under the same license as the Open Contracting Data Standard package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Open Contracting Data Standard 1.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-11 21:23-0500\n"
"PO-Revision-Date: 2020-06-30 01:22+0000\n"
"Language-Team: Italian (https://www.transifex.com/open-contracting-partnership-1/teams/112300/it/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: it\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../docs/guidance/build/system_architectures.md:1
msgid "System architectures"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:3
msgid ""
"The publication of OCDS data involves the creation of a conversion process. "
"Like an ETL process, data has to be extracted from one or more sources, "
"converted and either served or stored."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:5
msgid ""
"This process needs an adequate architecture to support it. Its design "
"depends on several factors:"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:7
msgid ""
"Whether is possible to extend existing systems, or a new system will be "
"built,"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:8
msgid "The number and nature of the live systems,"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:9
msgid ""
"The technical resources available to the publisher, like storage and "
"processing capabilities. This includes the availability of technical "
"personnel to maintain systems and modules."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:11
msgid "Other considerations that affect the design are:"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:13
msgid ""
"Individual OCDS documents for each process ought to be available at unique "
"persistent URLs."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:14
msgid ""
"Bulk downloads in JSON, CSV (and, if appropriate, Excel) formats ought to be"
" available. These files ought to be segmented according to one or more "
"criteria, like time periods."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:15
msgid ""
"Users ought to be able to locate the collections of releases and records "
"they want."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:17
msgid ""
"This guidance describes some design approaches with their advantages and "
"disadvantages. This is not an exhaustive list, but it can be used to inform "
"the design of the publication system."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:19
msgid "On-demand transformation from live systems"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:21
msgid ""
"In this scenario, each source system converts data in OCDS format on demand."
" Data is not stored but gets converted each time a user or third party "
"invokes the conversion process. This is the easiest path when a single live "
"system manages all contracting processes. But it involves modifications to "
"the system to add an OCDS conversion module."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:23
msgid ""
"An API performs data transformation on the fly each time it receives a "
"request."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:25
msgid "![Direct Publication 2](../../_static/png/directPublication2.png)"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:27
msgid ""
"The conversion module produces OCDS releases and/or records wrapped in "
"packages."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:29
msgid ""
"This approach does not need extra storage space. But it might not be "
"possible to provide persistent URLs for releases, nor a change history for "
"each process."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:31
msgid ""
"The [easy releases guidance](easy_releases) explains how to achieve a "
"conformant OCDS implementation where it is not possible to provide a full "
"change history."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:33
msgid ""
"Bulk downloads can be provided as part of the API. Live queries can stress "
"the live systems if they need to scan large portions of data."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:35
msgid "Separate OCDS datastore"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:37
msgid ""
"In the scenarios that follow, a middleware component converts and stores the"
" data in OCDS format. This has some advantages:"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:39
msgid ""
"It is possible to merge and centralize data from more than one system in a "
"single datastore."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:40
msgid "It can relieve live systems from expensive queries."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:41
msgid ""
"It can enable the generation of the change history for each contracting "
"process."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:43
msgid ""
"On the other hand, there is a cost of maintaining a separate datastore. In "
"these scenarios, we assume an API provides access to OCDS data."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:45
msgid ""
"Publishers need to consider how to store OCDS data. Releases are immutable "
"so can be stored as they are, but records change over time. The process can "
"build records on each API call, or store and update them each time a new "
"release is created. The API needs to return OCDS data wrapped in a release "
"or record package. Usually there is no need to store wrapped OCDS data, "
"since package data can be generated in real time."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:47
msgid ""
"The [releases and records](../../getting_started/releases_and_records) "
"guidance describes OCDS releases and records and their different components."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:50
msgid "Pull and convert"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:52
msgid ""
"In this scenario an automated process pulls data from live systems to the "
"middleware system. The middleware performs the conversion to OCDS and "
"maintains a datastore in OCDS format."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:54
msgid "![Pull and Convert](../../_static/png/pullAndConvert.png)"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:56
msgid ""
"The key benefit of this approach is that the middleware system can store the"
" change history. This is especially good when source systems do not maintain"
" historic data."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:58
msgid ""
"This approach might involve some changes to live systems to allow the "
"middleware to pull data. The middleware system merges and centralizes data "
"in a single place."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:60
msgid ""
"To add more source systems, the OCDS conversion module needs to be updated "
"to pull data from the new system(s)."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:62
msgid ""
"An important decision in the implementation is the frequency to pull data. "
"If the frequency is low, there is a risk of losing the detail of individual "
"changes."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:64
msgid ""
"An alternative to the pull mechanism is to use a push mechanism in each "
"source system. Specific events or changes to the data would trigger a data "
"push to the middleware. This approach can mitigate the risk of losing "
"individual changes. But this might involve bigger modifications to the "
"source system(s)."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:66
msgid ""
"European Dynamics developed an e-procurement system with a similar approach "
"for OCDS output. The system was built for the Zambian Public Procurement "
"Agency."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:68
msgid "Convert and push"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:70
msgid ""
"This scenario is a combination of the two previous scenarios. Live systems "
"perform the conversion of data to OCDS format. They push converted data to a"
" middleware, which maintains an OCDS format datastore. An API in the "
"middleware system serves the OCDS data."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:72
msgid "![Convert and Push](../../_static/png/convertAndPush.png)"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:74
msgid ""
"This approach puts the burden of data conversion in live systems. Yet it "
"might be a solution for publishers with a single source system which does "
"not store the change history."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:76
msgid ""
"This approach might also be suitable to combine data from many source "
"systems. Each source system becomes an OCDS publisher. The middleware "
"becomes less complex since it only ingests data in a single format."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:78
msgid ""
"The [OpenProcurement](http://openprocurement.org/en/) system adopted a "
"similar approach. This system was developed in Ukraine and it's the base for"
" the [Prozorro](https://prozorro.gov.ua/en/) platform. Prozorro uses OCDS "
"building blocks as the foundation for live systems data models."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:80
msgid ""
"A variant in this scenario is to store files in a web-accessible file "
"system, as shown below. A periodical invocation of the conversion module "
"updates the file system."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:82
msgid "![Direct Publication 1](../../_static/png/directPublication1.png)"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:84
msgid ""
"The file system ensures that each OCDS document has a persistent URL for "
"access. But a downside is that the volume of data might grow fast, as plain "
"files can take significant space. The file system can provide a change "
"history as long as releases are never overwritten. Bulk downloads can be "
"generated periodically and stored in the file system. Records might be "
"impossible to produce if there is more than one system."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:86
msgid "Manual import"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:88
msgid ""
"In this scenario a middleware system sits between live systems and the API."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:90
msgid ""
"Data is manually exported from live systems into files. The files are "
"uploaded to the middleware system, which converts the data to OCDS. The "
"system stores the data in OCDS format."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:92
msgid "![Manual Import](../../_static/png/manualImport.png)"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:94
msgid ""
"A disadvantage in this approach is the potential of failures. Input files "
"might be corrupted or have unexpected formats due to changes or errors in "
"the live systems."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:96
msgid ""
"There’s a documented example of this approach in the work Development "
"Gateway did in [Vietnam](https://www.developmentgateway.org/blog/under-hood-"
"open-source-dashboard-procurement-vietnam)."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:98
msgid "Additional considerations"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:100
msgid ""
"When designing an architecture, publishers ought to consider the following:"
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:102
msgid ""
"**Search endpoints**. An API can provide more than individual releases and "
"records. Endpoints help to filter data by different parameters like "
"suppliers and product types. Another consideration is providing alternative "
"formats, like CSV and Excel data. This is important for users who are more "
"familiar with spreadsheets."
msgstr ""

#: ../../docs/guidance/build/system_architectures.md:103
msgid ""
"**Documents**. OCDS includes the disclosure of documents. Often, systems "
"link out to documents on external platforms, where link-rot can set-in. The "
"best systems will ensure that documents are archived but still available."
msgstr ""
